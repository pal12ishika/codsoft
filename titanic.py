# -*- coding: utf-8 -*-
"""titanic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jRzafu8z14W11VFasp0V9fHPddaOc82k

Importing the libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

"""Data processing"""

#load the data from csv file
filepath='/content/tested.csv'
titanic_data=pd.read_csv(filepath)

#displaying the dataset
titanic_data

#print first 5 rows
titanic_data.head()

#print number of rows and columns
titanic_data.shape

#print the information of dataset
titanic_data.info()

#checking the number of missing values and printing
missing_value_count=titanic_data.isnull().sum()
print(missing_value_count)

"""Handling the missing values"""

#drop the cabin column from dataset
titanic_data=titanic_data.drop(columns='Cabin', axis=1)

#replace the values in age column with mean value
titanic_data['Age'].fillna(titanic_data['Age'].mean(),inplace=True)

#print the mode of Embarked column
print(titanic_data['Embarked'].mode())

#print the mode of embarked column where index=0
print(titanic_data['Embarked'].mode()[0])

#replace the missing values in Embarked column with mode values
titanic_data['Embarked'].fillna(titanic_data['Embarked'].mode()[0], inplace=True)

#re-checking the missing values in the dataset
titanic_data.isnull().sum()

"""Data analysis"""

#printing the statistical measure of data
titanic_data.describe()

#counting the values of Survived column
titanic_data['Survived'].value_counts()

"""Data Visualisation"""

sns.set()

#plotting a countplot graph for Survived column
sns.countplot(x=titanic_data['Survived'], hue=titanic_data['Pclass'])

#counting the values of Sex column
titanic_data['Sex'].value_counts()

#plotting a countplot graph for Sex column
sns.countplot(x=titanic_data['Sex'])

#number of survivors sex wise
sns.countplot(x=titanic_data['Sex'], hue=titanic_data['Survived'])

#number of survivors on the basis of Pclass
sns.countplot(x=titanic_data['Pclass'], hue=titanic_data['Survived'])

#counting the values in Sex column
titanic_data['Sex'].value_counts()

"""Categorical column's Encoding"""

#counting the values in Embarked column
titanic_data['Embarked'].value_counts()

#coverting the categorical columns
titanic_data.replace({'Sex':{'male':0,'female':1}, 'Embarked':{'S':0,'C':1,'Q':2}}, inplace=True)

#displaying first 5 rows
titanic_data.head()

"""seprating target"""

x= titanic_data.drop(columns=['PassengerId','Name','Ticket','Survived'],axis=1)
y= titanic_data['Survived']

print(x)

print(y)

"""Splitting the data into training and test data"""

x=titanic_data[['Pclass','Sex']]
y=titanic_data['Survived']

x_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.2, random_state=2)

print(x.shape, x_train.shape, x_test.shape)

"""MODEL TRAINING

LOGISTIC REGRESSION
"""

log= LogisticRegression(random_state=0)
log.fit(x_train,y_train)

pred=log.predict(x_test)

print(y_test)

from sklearn.metrics import classification_report

from sklearn.metrics import confusion_matrix

confusion_matrix(y_test, pred)

accuracy_score(y_test, pred)

